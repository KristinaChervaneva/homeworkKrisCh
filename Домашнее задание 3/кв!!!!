'''
1. Как расшифровывается ООП, в чем суть отличия от процедурного и функционального программирования?
ООП - объектно-ориентированное программирование - это способ организации программы, позволяющий использовать один и тот
же код многократно. Отличие от процедурного метода: код можно разделить на отдельные фрагменты, запись идет не сплошным
текстом. Отличие от функционального: помимо функций вводятся "объекты" и "классы".
2. В чем заключается идея инкапсуляции, как она реализуется в Python?
Во многих языках инкапсуляця понимается как сокрытие данных, то есть невозможность напрямую получить доступ к внутренней
структуре объекта, так как это небезопасно. В Python нет такой инкапсуляции. В нем можно получить доступ к любому атрибуту
объекта и изменить его, но есть механизм, позволяющий имитировать сокрытие данных. Второй смысл инкапсуляции - объединение
описания свойств объектов и их поведения в единое целое, то есть в класс.
3. Как называются переменные и функции, принадлежащие экземпляру класса?
Переменные называют атрибутами или свойствами, а функции - методами.
4. Что такое инициализатор класса и чем он отличается от конструктора?
Конструктор-это определенный метод типа, который принимает указанное количество параметров и используется для создания и
инициализации объекта. Инициализатор объекта-это код, который выполняется на объекте после конструктора и может использоваться
для краткого задания любому количеству полей объекта заданных значений.
'''